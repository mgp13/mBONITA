#contrast2
contrast2 = read.csv(paste0(getwd(), "/contrast2/Paintomics_pathways_1O2NoCyclo_vs_19O2NoCyclo.xls.csv"))
contrast2$Contrast = "X1O2NoCyA - X19O2NoCyA"
#contrast3
contrast3 = read.csv(paste0(getwd(), "/contrast3/Paintomics_pathways_1O2PlusCyclo_vs_19O2NoCyclo.xls.csv"))
contrast3$Contrast = "X1O2PlusCyA - X19O2NoCyA"
results <- rbind(contrast1, contrast2, contrast3)
colnames(results) = c("Pathway.name", "Unique.genes", "Uniquemetabol", "Phosphoproteomics", "PhosphoproteomicsFDR", "Proteomics", "ProteomicsFDR", "Transcriptomics", "TranscriptomicsFDR", "Combined", "X", "Contrast")
results = results[,!colnames(results) %in% c("X","Uniquemetabol")]
results = as.data.frame(apply(results, c(1,2), function(x){if(x%in%c("-")){return(NA)}else{return(x)}}))
results$Proteomics_FDR = p.adjust(results$Proteomics, "fdr")
results$Phosphoproteomics_FDR = p.adjust(results$Phosphoproteomics, "BH")
results$Transcriptomics_FDR = p.adjust(results$Transcriptomics, "BH")
results$Combined_FDR = p.adjust(results$Combined, "BH")
write.csv(results, "paintomics_allResults.csv")
head(results)
#contrast1
contrast1 = read.csv(paste0(getwd(), "/contrast1/Paintomics_pathways_1O2NoCyA_vs_1O2PlusCyA.xls.csv"))
contrast1$Contrast = "X1O2NoCyA - X1O2PlusCyA"
#contrast2
contrast2 = read.csv(paste0(getwd(), "/contrast2/Paintomics_pathways_1O2NoCyclo_vs_19O2NoCyclo.xls.csv"))
contrast2$Contrast = "X1O2NoCyA - X19O2NoCyA"
#contrast3
contrast3 = read.csv(paste0(getwd(), "/contrast3/Paintomics_pathways_1O2PlusCyclo_vs_19O2NoCyclo.xls.csv"))
contrast3$Contrast = "X1O2PlusCyA - X19O2NoCyA"
results <- rbind(contrast1, contrast2, contrast3)
head(results)
colnames(results)
#contrast1
contrast1 = read.csv(paste0(getwd(), "/contrast1/Paintomics_pathways_1O2NoCyA_vs_1O2PlusCyA.xls.csv"))
contrast1$Contrast = "X1O2NoCyA - X1O2PlusCyA"
#contrast2
contrast2 = read.csv(paste0(getwd(), "/contrast2/Paintomics_pathways_1O2NoCyclo_vs_19O2NoCyclo.xls.csv"))
contrast2$Contrast = "X1O2NoCyA - X19O2NoCyA"
#contrast3
contrast3 = read.csv(paste0(getwd(), "/contrast3/Paintomics_pathways_1O2PlusCyclo_vs_19O2NoCyclo.xls.csv"))
contrast3$Contrast = "X1O2PlusCyA - X19O2NoCyA"
results <- rbind(contrast1, contrast2, contrast3)
##colnames(results) = c("Pathway.name", "Unique.genes", "Uniquemetabol", "Phosphoproteomics", "PhosphoproteomicsFDR", "Proteomics", "ProteomicsFDR_BH", "Transcriptomics", "TranscriptomicsFDR", "Combined", "X", "Contrast")
results = results[,!colnames(results) %in% c("X","Uniquemetabol")]
results = as.data.frame(apply(results, c(1,2), function(x){if(x%in%c("-")){return(NA)}else{return(x)}}))
results$Proteomics_FDR = p.adjust(results$Proteomics, "BH")
results$Phosphoproteomics_FDR = p.adjust(results$Phosphoproteomics, "BH")
results <- rbind(contrast1, contrast2, contrast3)
colnames(results)
#contrast1
contrast1 = read.csv(paste0(getwd(), "/contrast1/Paintomics_pathways_1O2NoCyA_vs_1O2PlusCyA.xls.csv"))
contrast1$Contrast = "X1O2NoCyA - X1O2PlusCyA"
#contrast2
contrast2 = read.csv(paste0(getwd(), "/contrast2/Paintomics_pathways_1O2NoCyclo_vs_19O2NoCyclo.xls.csv"))
contrast2$Contrast = "X1O2NoCyA - X19O2NoCyA"
#contrast3
contrast3 = read.csv(paste0(getwd(), "/contrast3/Paintomics_pathways_1O2PlusCyclo_vs_19O2NoCyclo.xls.csv"))
contrast3$Contrast = "X1O2PlusCyA - X19O2NoCyA"
results <- rbind(contrast1, contrast2, contrast3)
colnames(results) = c("Pathway.name", "Unique.genes", "Uniquemetabol", "Phosphoproteomics", "PhosphoproteomicsFDR_BH", "Proteomics", "ProteomicsFDR_BH", "Transcriptomics", "TranscriptomicsFDR_BH", "Combined", "CombinedFDR_BH", "Contrast")
results = results[,!colnames(results) %in% c("X","Uniquemetabol")]
results = as.data.frame(apply(results, c(1,2), function(x){if(x%in%c("-")){return(NA)}else{return(x)}}))
results$Proteomics_FDR = p.adjust(results$Proteomics, "BH")
results$Phosphoproteomics_FDR = p.adjust(results$Phosphoproteomics, "BH")
results$Transcriptomics_FDR = p.adjust(results$Transcriptomics, "BH")
results$Combined_FDR = p.adjust(results$Combined, "BH")
write.csv(results, "paintomics_allResults.csv")
head(results)
#contrast1
contrast1 = read.csv(paste0(getwd(), "/contrast1/Paintomics_pathways_1O2NoCyA_vs_1O2PlusCyA.xls.csv"))
contrast1$Contrast = "X1O2NoCyA - X1O2PlusCyA"
#contrast2
contrast2 = read.csv(paste0(getwd(), "/contrast2/Paintomics_pathways_1O2NoCyclo_vs_19O2NoCyclo.xls.csv"))
contrast2$Contrast = "X1O2NoCyA - X19O2NoCyA"
#contrast3
contrast3 = read.csv(paste0(getwd(), "/contrast3/Paintomics_pathways_1O2PlusCyclo_vs_19O2NoCyclo.xls.csv"))
contrast3$Contrast = "X1O2PlusCyA - X19O2NoCyA"
results <- rbind(contrast1, contrast2, contrast3)
colnames(results) = c("Pathway.name", "Unique.genes", "Uniquemetabol", "Phosphoproteomics", "PhosphoproteomicsFDR_BH", "Proteomics", "ProteomicsFDR_BH", "Transcriptomics", "TranscriptomicsFDR_BH", "Combined", "CombinedFDR_BH", "Contrast")
results = results[,!colnames(results) %in% c("X","Uniquemetabol")]
results = as.data.frame(apply(results, c(1,2), function(x){if(x%in%c("-")){return(NA)}else{return(x)}}))
write.csv(results, "paintomics_allResults.csv")
results$Proteomics_FDR = p.adjust(results$Proteomics, "BH")
results$Phosphoproteomics_FDR = p.adjust(results$Phosphoproteomics, "BH")
results$Transcriptomics_FDR = p.adjust(results$Transcriptomics, "BH")
results$Combined_FDR = p.adjust(results$Combined, "BH")
head(results)
melt_results = reshape2::melt(results, id.vars = c("Pathway.name", "Contrast"), measure.vars = c("Proteomics_FDR", "Phosphoproteomics_FDR", "Transcriptomics_FDR", "Combined_FDR"))
melt_results$variable = gsub("_FDR", "", melt_results$variable)
colnames(melt_results) = c("Pathway.name", "Contrast", "Dataset", "FDR")
melt_results$negativeLog10FDR = (-1)*log10(melt_results$FDR)
head(melt_results)
results1 <- read.csv("Paintomics_pathways_1% O2, CyA-_vs_19% O2, CyA-.csv")
require(ggplot2)
temp <- melt_results$FDR < 0.05
melt_results <- na.omit(melt_results[temp,])
melt_results <- melt_results[order(melt_results$negativeLog10FDR),]
ggplot(melt_results) + geom_point(aes(x=negativeLog10FDR, y=Pathway.name, color=Contrast, shape=Contrast), size=3) + facet_wrap(facets = 'Dataset', nrow = 1) + theme_bw() + scale_color_brewer(palette = 'Set2')
wd <- getwd() #"C:\\Users\\Mukta Palshikar\\Box\\multiomics integration manuscript\\data\\paintomics\\"
setwd(wd)
wd <- paste0(wd, "/")
print(wd)
proteomics = read.csv("bonita_proteomics.csv")
colnames(proteomics)[1] = "Gene"
write.table(proteomics, "paintomics_proteomics.txt", sep="\t", row.names=FALSE)
phosphoproteomics = read.csv("bonita_phosphoproteomics.csv")
colnames(phosphoproteomics)[1] = "Gene"
write.table(phosphoproteomics, "paintomics_phosphoproteomics.txt", sep="\t", row.names=FALSE)
transcriptomics = read.csv("bonita_transcriptomics.csv")
colnames(transcriptomics)[1] = "Gene"
write.table(transcriptomics, "paintomics_transcriptomics.txt", sep="\t", row.names=FALSE)
require(readxl)
explanation <- read_excel("DE_analysis_20221003.xlsx", sheet = 'Explanation') #read_excel("C:\\Users\\Mukta\ Palshikar\\Documents\\GitHub\\moBONITA\\data\\paintomics\\DE_analysis_20221003.xlsx", sheet = 'Explanation')
for (i in 1:nrow(explanation)){
#print(explanation$Name[i])
temp = read_excel("DE_analysis_20221003.xlsx", sheet = explanation$Name[i])#read_excel("C:\\Users\\Mukta\ Palshikar\\Documents\\GitHub\\moBONITA\\data\\paintomics\\DE_analysis_20221003.xlsx", sheet = explanation$Name[i])
fileName = paste0(explanation$Dataset[i], "_", explanation$Contrast[i], ".csv")
print(fileName)
write.csv(temp, fileName)
fileName = paste0("Relevant_", fileName)
temp$absLog2FC = abs(temp$logFC)
temp2 = as.data.frame(temp$Identifier[temp$absLog2FC>quantile(temp$absLog2FC)[4]])
colnames(temp2) = "Gene"
write.csv(temp2, fileName, row.names=FALSE)
}
#contrast1
contrast1 = read.csv(paste0(getwd(), "/contrast1/Paintomics_pathways_1O2NoCyA_vs_1O2PlusCyA.xls.csv"))
contrast1$Contrast = "X1O2NoCyA - X1O2PlusCyA"
#contrast2
contrast2 = read.csv(paste0(getwd(), "/contrast2/Paintomics_pathways_1O2NoCyclo_vs_19O2NoCyclo.xls.csv"))
contrast2$Contrast = "X1O2NoCyA - X19O2NoCyA"
#contrast3
contrast3 = read.csv(paste0(getwd(), "/contrast3/Paintomics_pathways_1O2PlusCyclo_vs_19O2NoCyclo.xls.csv"))
contrast3$Contrast = "X1O2PlusCyA - X19O2NoCyA"
results <- rbind(contrast1, contrast2, contrast3)
colnames(results) = c("Pathway.name", "Unique.genes", "Uniquemetabol", "Phosphoproteomics", "PhosphoproteomicsFDR_BH", "Proteomics", "ProteomicsFDR_BH", "Transcriptomics", "TranscriptomicsFDR_BH", "Combined", "CombinedFDR_BH", "Contrast")
results = results[,!colnames(results) %in% c("X","Uniquemetabol")]
results = as.data.frame(apply(results, c(1,2), function(x){if(x%in%c("-")){return(NA)}else{return(x)}}))
write.csv(results, "paintomics_allResults.csv")
results$Proteomics_FDR = p.adjust(results$Proteomics, "BH")
results$Phosphoproteomics_FDR = p.adjust(results$Phosphoproteomics, "BH")
results$Transcriptomics_FDR = p.adjust(results$Transcriptomics, "BH")
results$Combined_FDR = p.adjust(results$Combined, "BH")
head(results)
melt_results = reshape2::melt(results, id.vars = c("Pathway.name", "Contrast"), measure.vars = c("Proteomics_FDR", "Phosphoproteomics_FDR", "Transcriptomics_FDR", "Combined_FDR"))
melt_results$variable = gsub("_FDR", "", melt_results$variable)
colnames(melt_results) = c("Pathway.name", "Contrast", "Dataset", "FDR")
melt_results$negativeLog10FDR = (-1)*log10(melt_results$FDR)
head(melt_results)
require(ggplot2)
temp <- melt_results$FDR < 0.05
melt_results <- na.omit(melt_results[temp,])
melt_results <- melt_results[order(melt_results$negativeLog10FDR),]
ggplot(melt_results) + geom_point(aes(x=negativeLog10FDR, y=Pathway.name, color=Contrast, shape=Contrast), size=3) + facet_wrap(facets = 'Dataset', nrow = 1) + theme_bw() + scale_color_brewer(palette = 'Set2')
head(melt_results)
melt_results = reshape2::melt(results, id.vars = c("Pathway.name", "Contrast"), measure.vars = c("Proteomics_FDR", "Phosphoproteomics_FDR", "Transcriptomics_FDR", "Combined_FDR"))
melt_results$variable = gsub("_FDR", "", melt_results$variable)
colnames(melt_results) = c("Pathway.name", "Contrast", "Dataset", "FDR")
melt_results$negativeLog10FDR = (-1)*log10(melt_results$FDR)
head(melt_results)
wd <- getwd() #"C:\\Users\\Mukta Palshikar\\Box\\multiomics integration manuscript\\data\\paintomics\\"
setwd(wd)
wd <- paste0(wd, "/")
print(wd)
proteomics = read.csv("bonita_proteomics.csv")
colnames(proteomics)[1] = "Gene"
write.table(proteomics, "paintomics_proteomics.txt", sep="\t", row.names=FALSE)
phosphoproteomics = read.csv("bonita_phosphoproteomics.csv")
colnames(phosphoproteomics)[1] = "Gene"
write.table(phosphoproteomics, "paintomics_phosphoproteomics.txt", sep="\t", row.names=FALSE)
transcriptomics = read.csv("bonita_transcriptomics.csv")
colnames(transcriptomics)[1] = "Gene"
write.table(transcriptomics, "paintomics_transcriptomics.txt", sep="\t", row.names=FALSE)
require(readxl)
explanation <- read_excel("DE_analysis_20221003.xlsx", sheet = 'Explanation') #read_excel("C:\\Users\\Mukta\ Palshikar\\Documents\\GitHub\\moBONITA\\data\\paintomics\\DE_analysis_20221003.xlsx", sheet = 'Explanation')
for (i in 1:nrow(explanation)){
#print(explanation$Name[i])
temp = read_excel("DE_analysis_20221003.xlsx", sheet = explanation$Name[i])#read_excel("C:\\Users\\Mukta\ Palshikar\\Documents\\GitHub\\moBONITA\\data\\paintomics\\DE_analysis_20221003.xlsx", sheet = explanation$Name[i])
fileName = paste0(explanation$Dataset[i], "_", explanation$Contrast[i], ".csv")
print(fileName)
write.csv(temp, fileName)
fileName = paste0("Relevant_", fileName)
temp$absLog2FC = abs(temp$logFC)
temp2 = as.data.frame(temp$Identifier[temp$absLog2FC>quantile(temp$absLog2FC)[4]])
colnames(temp2) = "Gene"
write.csv(temp2, fileName, row.names=FALSE)
}
#contrast1
contrast1 = read.csv(paste0(getwd(), "/contrast1/Paintomics_pathways_1O2NoCyA_vs_1O2PlusCyA.xls.csv"))
contrast1$Contrast = "X1O2NoCyA - X1O2PlusCyA"
#contrast2
contrast2 = read.csv(paste0(getwd(), "/contrast2/Paintomics_pathways_1O2NoCyclo_vs_19O2NoCyclo.xls.csv"))
contrast2$Contrast = "X1O2NoCyA - X19O2NoCyA"
#contrast3
contrast3 = read.csv(paste0(getwd(), "/contrast3/Paintomics_pathways_1O2PlusCyclo_vs_19O2NoCyclo.xls.csv"))
contrast3$Contrast = "X1O2PlusCyA - X19O2NoCyA"
results <- rbind(contrast1, contrast2, contrast3)
colnames(results) = c("Pathway.name", "Unique.genes", "Uniquemetabol", "Phosphoproteomics", "PhosphoproteomicsFDR_BH", "Proteomics", "ProteomicsFDR_BH", "Transcriptomics", "TranscriptomicsFDR_BH", "Combined", "CombinedFDR_BH", "Contrast")
results = results[,!colnames(results) %in% c("X","Uniquemetabol")]
results = as.data.frame(apply(results, c(1,2), function(x){if(x%in%c("-")){return(NA)}else{return(x)}}))
write.csv(results, "paintomics_allResults.csv")
results$Proteomics_FDR = p.adjust(results$Proteomics, "BH")
results$Phosphoproteomics_FDR = p.adjust(results$Phosphoproteomics, "BH")
results$Transcriptomics_FDR = p.adjust(results$Transcriptomics, "BH")
results$Combined_FDR = p.adjust(results$Combined, "BH")
head(results)
melt_results = reshape2::melt(results, id.vars = c("Pathway.name", "Contrast"), measure.vars = c("Proteomics_FDR", "Phosphoproteomics_FDR", "Transcriptomics_FDR", "Combined_FDR"))
melt_results$variable = gsub("_FDR", "", melt_results$variable)
colnames(melt_results) = c("Pathway.name", "Contrast", "Dataset", "FDR")
melt_results$negativeLog10FDR = (-1)*log10(melt_results$FDR)
head(melt_results)
threshold <- 0.05
cwd <- getwd()
methods <- c("CAMERA", "LeapR", "PaintOmics", "ActivePathways", "mBONITA", "multiGSEA")#"BONITA",
PAlist <- vector(mode = "list", length = length(methods))
names(PAlist) <- methods
PAlist[["CAMERA"]] <- read.csv(paste0(cwd, "/reactomeGSA-camera/camera_combinedPvalues.csv"), row.names = 1)
temp <- PAlist[["CAMERA"]]$FDR < threshold #PValue < 0.01
PAlist[["CAMERA"]] <- na.omit(PAlist[["CAMERA"]][temp,])
PAlist[["LeapR"]] <- read.csv(paste0(cwd, "/leapR/leapR_allResults.csv"))
temp <- PAlist[["LeapR"]]$BH_pvalue < threshold
PAlist[["LeapR"]] <- na.omit(PAlist[["LeapR"]][temp,])
PAlist[["LeapR"]]$Pathway <- trimws(gsub("KEGG|_|\\d+$", " ", PAlist[["LeapR"]]$Pathway))
PAlist[["PaintOmics"]]<- as.data.frame(read.csv(paste0(cwd, "/paintomics/paintomics_allResults.csv"), row.names = 1))
colnames(PAlist[["PaintOmics"]])[1] <- "Pathway"
temp <- PAlist[["PaintOmics"]]$Combined_FDR < threshold
PAlist[["PaintOmics"]] <- PAlist[["PaintOmics"]][temp,]
PAlist[["PaintOmics"]]$Method <- "Combined"
threshold <- 0.05
cwd <- getwd()
methods <- c("CAMERA", "LeapR", "PaintOmics", "ActivePathways", "mBONITA", "multiGSEA")#"BONITA",
PAlist <- vector(mode = "list", length = length(methods))
names(PAlist) <- methods
PAlist[["CAMERA"]] <- read.csv(paste0(cwd, "/reactomeGSA-camera/camera_combinedPvalues.csv"), row.names = 1)
temp <- PAlist[["CAMERA"]]$FDR < threshold #PValue < 0.01
PAlist[["CAMERA"]] <- na.omit(PAlist[["CAMERA"]][temp,])
PAlist[["LeapR"]] <- read.csv(paste0(cwd, "/leapR/leapR_allResults.csv"))
temp <- PAlist[["LeapR"]]$BH_pvalue < threshold
PAlist[["LeapR"]] <- na.omit(PAlist[["LeapR"]][temp,])
PAlist[["LeapR"]]$Pathway <- trimws(gsub("KEGG|_|\\d+$", " ", PAlist[["LeapR"]]$Pathway))
PAlist[["PaintOmics"]]<- as.data.frame(read.csv(paste0(cwd, "/paintomics/paintomics_allResults.csv"), row.names = 1))
colnames(PAlist[["PaintOmics"]])[1] <- "Pathway"
temp <- PAlist[["PaintOmics"]]$Combined_FDR < threshold
PAlist[["PaintOmics"]] <- PAlist[["PaintOmics"]][temp,]
head(PAlist[['PaintOmics']])
wd <- getwd() #"C:\\Users\\Mukta Palshikar\\Box\\multiomics integration manuscript\\data\\paintomics\\"
setwd(wd)
wd <- paste0(wd, "/")
print(wd)
proteomics = read.csv("bonita_proteomics.csv")
colnames(proteomics)[1] = "Gene"
write.table(proteomics, "paintomics_proteomics.txt", sep="\t", row.names=FALSE)
phosphoproteomics = read.csv("bonita_phosphoproteomics.csv")
colnames(phosphoproteomics)[1] = "Gene"
write.table(phosphoproteomics, "paintomics_phosphoproteomics.txt", sep="\t", row.names=FALSE)
transcriptomics = read.csv("bonita_transcriptomics.csv")
colnames(transcriptomics)[1] = "Gene"
write.table(transcriptomics, "paintomics_transcriptomics.txt", sep="\t", row.names=FALSE)
require(readxl)
explanation <- read_excel("DE_analysis_20221003.xlsx", sheet = 'Explanation') #read_excel("C:\\Users\\Mukta\ Palshikar\\Documents\\GitHub\\moBONITA\\data\\paintomics\\DE_analysis_20221003.xlsx", sheet = 'Explanation')
for (i in 1:nrow(explanation)){
#print(explanation$Name[i])
temp = read_excel("DE_analysis_20221003.xlsx", sheet = explanation$Name[i])#read_excel("C:\\Users\\Mukta\ Palshikar\\Documents\\GitHub\\moBONITA\\data\\paintomics\\DE_analysis_20221003.xlsx", sheet = explanation$Name[i])
fileName = paste0(explanation$Dataset[i], "_", explanation$Contrast[i], ".csv")
print(fileName)
write.csv(temp, fileName)
fileName = paste0("Relevant_", fileName)
temp$absLog2FC = abs(temp$logFC)
temp2 = as.data.frame(temp$Identifier[temp$absLog2FC>quantile(temp$absLog2FC)[4]])
colnames(temp2) = "Gene"
write.csv(temp2, fileName, row.names=FALSE)
}
#contrast1
contrast1 = read.csv(paste0(getwd(), "/contrast1/Paintomics_pathways_1O2NoCyA_vs_1O2PlusCyA.xls.csv"))
contrast1$Contrast = "X1O2NoCyA - X1O2PlusCyA"
#contrast2
contrast2 = read.csv(paste0(getwd(), "/contrast2/Paintomics_pathways_1O2NoCyclo_vs_19O2NoCyclo.xls.csv"))
contrast2$Contrast = "X1O2NoCyA - X19O2NoCyA"
#contrast3
contrast3 = read.csv(paste0(getwd(), "/contrast3/Paintomics_pathways_1O2PlusCyclo_vs_19O2NoCyclo.xls.csv"))
contrast3$Contrast = "X1O2PlusCyA - X19O2NoCyA"
results <- rbind(contrast1, contrast2, contrast3)
colnames(results) = c("Pathway.name", "Unique.genes", "Uniquemetabol", "Phosphoproteomics", "PhosphoproteomicsFDR_BH", "Proteomics", "ProteomicsFDR_BH", "Transcriptomics", "TranscriptomicsFDR_BH", "Combined", "CombinedFDR_BH", "Contrast")
results = results[,!colnames(results) %in% c("X","Uniquemetabol")]
results = as.data.frame(apply(results, c(1,2), function(x){if(x%in%c("-")){return(NA)}else{return(x)}}))
results$Proteomics_FDR = p.adjust(results$Proteomics, "BH")
results$Phosphoproteomics_FDR = p.adjust(results$Phosphoproteomics, "BH")
results$Transcriptomics_FDR = p.adjust(results$Transcriptomics, "BH")
results$Combined_FDR = p.adjust(results$Combined, "BH")
write.csv(results, "paintomics_allResults.csv")
head(results)
melt_results = reshape2::melt(results, id.vars = c("Pathway.name", "Contrast"), measure.vars = c("Proteomics_FDR", "Phosphoproteomics_FDR", "Transcriptomics_FDR", "Combined_FDR"))
melt_results$variable = gsub("_FDR", "", melt_results$variable)
colnames(melt_results) = c("Pathway.name", "Contrast", "Dataset", "FDR")
melt_results$negativeLog10FDR = (-1)*log10(melt_results$FDR)
head(melt_results)
threshold <- 0.05
cwd <- getwd()
methods <- c("CAMERA", "LeapR", "PaintOmics", "ActivePathways", "mBONITA", "multiGSEA")#"BONITA",
PAlist <- vector(mode = "list", length = length(methods))
names(PAlist) <- methods
PAlist[["CAMERA"]] <- read.csv(paste0(cwd, "/reactomeGSA-camera/camera_combinedPvalues.csv"), row.names = 1)
temp <- PAlist[["CAMERA"]]$FDR < threshold #PValue < 0.01
PAlist[["CAMERA"]] <- na.omit(PAlist[["CAMERA"]][temp,])
PAlist[["LeapR"]] <- read.csv(paste0(cwd, "/leapR/leapR_allResults.csv"))
temp <- PAlist[["LeapR"]]$BH_pvalue < threshold
PAlist[["LeapR"]] <- na.omit(PAlist[["LeapR"]][temp,])
PAlist[["LeapR"]]$Pathway <- trimws(gsub("KEGG|_|\\d+$", " ", PAlist[["LeapR"]]$Pathway))
PAlist[["PaintOmics"]]<- as.data.frame(read.csv(paste0(cwd, "/paintomics/paintomics_allResults.csv"), row.names = 1))
colnames(PAlist[["PaintOmics"]])[1] <- "Pathway"
temp <- PAlist[["PaintOmics"]]$Combined_FDR < threshold
PAlist[["PaintOmics"]] <- PAlist[["PaintOmics"]][temp,]
PAlist[["PaintOmics"]]$Method <- "Combined"
head(results)
PAlist[["PaintOmics"]]<- as.data.frame(read.csv(paste0(cwd, "/paintomics/paintomics_allResults.csv"), row.names = 1))
PAlist[["PaintOmics"]]
head(PAlist[["PaintOmics"]])
temp <- PAlist[["PaintOmics"]]$CombinedFDR_BH < threshold
temp
PAlist[["PaintOmics"]] <- PAlist[["PaintOmics"]][temp,]
PAlist[["PaintOmics"]]$Method <- "Combined"
PAlist[["PaintOmics"]]
PAlist[["PaintOmics"]]$negativelog10FDR <- (-1)*log10(PAlist[["PaintOmics"]]$Combined_FDR)
threshold <- 0.05
cwd <- getwd()
methods <- c("CAMERA", "LeapR", "PaintOmics", "ActivePathways", "mBONITA", "multiGSEA")#"BONITA",
PAlist <- vector(mode = "list", length = length(methods))
names(PAlist) <- methods
PAlist[["CAMERA"]] <- read.csv(paste0(cwd, "/reactomeGSA-camera/camera_combinedPvalues.csv"), row.names = 1)
temp <- PAlist[["CAMERA"]]$FDR < threshold #PValue < 0.01
PAlist[["CAMERA"]] <- na.omit(PAlist[["CAMERA"]][temp,])
PAlist[["LeapR"]] <- read.csv(paste0(cwd, "/leapR/leapR_allResults.csv"))
temp <- PAlist[["LeapR"]]$BH_pvalue < threshold
PAlist[["LeapR"]] <- na.omit(PAlist[["LeapR"]][temp,])
PAlist[["LeapR"]]$Pathway <- trimws(gsub("KEGG|_|\\d+$", " ", PAlist[["LeapR"]]$Pathway))
PAlist[["PaintOmics"]]<- as.data.frame(read.csv(paste0(cwd, "/paintomics/paintomics_allResults.csv"), row.names = 1))
colnames(PAlist[["PaintOmics"]])[1] <- "Pathway"
temp <- PAlist[["PaintOmics"]]$CombinedFDR_BH < threshold
PAlist[["PaintOmics"]] <- PAlist[["PaintOmics"]][temp,]
PAlist[["PaintOmics"]]$Method <- "Combined"
PAlist[["PaintOmics"]]$negativelog10FDR <- (-1)*log10(PAlist[["PaintOmics"]]$CombinedFDR_BH)
PAlist[["ActivePathways"]]<- read.csv(paste0(cwd, "/ActivePathways/activePathways_allResults.csv"), row.names = NULL)
temp <- PAlist[["ActivePathways"]]$adjusted.p.val < threshold
PAlist[["ActivePathways"]] <- PAlist[["ActivePathways"]][temp,]
#PAlist[["BONITA"]]<- read.csv(paste0(cwd, "/mBonita_pvalues/Bonita_allResults.csv"), row.names = 1)
#temp <- PAlist[["BONITA"]]$FDR < threshold
#PAlist[["BONITA"]] <- na.omit(PAlist[["BONITA"]][temp,])
#PAlist[['BONITA']] <- na.omit(PAlist[["BONITA"]][PAlist[["BONITA"]]$Method %in% c('Combined'),])
##levels(PAlist$BONITA$Contrast) <- c("X19O2NoCyA - X1O2PlusCyA", "X19O2NoCyA - X1O2NoCyA", "X1O2PlusCyA - X1O2NoCyA" )
PAlist[["mBONITA"]]<- read.csv(paste0(cwd, "/mBonita_pvalues/mBonita_pvalues.csv"), row.names = 1)
temp <- PAlist[["mBONITA"]]$BHpvals < threshold
PAlist[['mBONITA']]$Algorithm <- 'mBONITA'
PAlist[['mBONITA']]$Method <- 'Concatenated'
PAlist[["mBONITA"]] <- na.omit(PAlist[["mBONITA"]][temp,])
PAlist[["mBONITA"]]$Pathway.Code <- PAlist[["mBONITA"]]$Pathway
PAlist[["mBONITA"]]$Pathway <- PAlist[["mBONITA"]]$Pathway.Name
PAlist[["mBONITA"]]$negativelog10FDR <- PAlist[["mBONITA"]]$negativeLog10_adjpvals
PAlist[["multiGSEA"]]<- read.csv(paste0(cwd, "/multiGSEA/multiGSEA_allResults.csv"), row.names = 1)
PAlist[["multiGSEA"]]<- na.omit(PAlist[["multiGSEA"]][PAlist[["multiGSEA"]]$combined_padj < threshold,])
PAlist[["multiGSEA"]]$Method <- "Combined"
for (n in names(PAlist)){
print(n)
PAlist[[n]]$Contrast <- gsub('X1O2NoCyA - X19O2NoCyA', '1% O2, CyA- vs 19% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub('X1O2PlusCyA - X1O2NoCyA', '1% O2, CyA+ vs 1% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub('X19O2NoCyA - X1O2PlusCyA', '19% O2, CyA- vs 1% O2, CyA+', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X19O2NoCyA - X1O2NoCyA", '1% O2, CyA- vs 19% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X1O2NoCyA - X1O2PlusCyA", '1% O2, CyA+ vs 1% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X1O2NoCyA vs X19O2NoCyA", '1% O2, CyA- vs 19% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X1O2PlusCyA - X19O2NoCyA", '19% O2, CyA- vs 1% O2, CyA+', PAlist[[n]]$Contrast)
print(unique(PAlist[[n]]$Contrast))
}
#PAlist[[""]]<- read.csv(paste0(cwd, ""))
print(lapply(PAlist, dim))
require(stringr)
makeVisList <- function(tempPAlist, contrast) {
visList <- tempPAlist
tempPAlist <-
lapply(tempPAlist, function(x) {
return(x[x$Contrast == contrast, ])
})
visList[["CAMERA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["CAMERA"]]$Pathway[tempPAlist[["CAMERA"]]$Method == "Combined"]))))
visList[["LeapR"]] <-
unique(str_to_title(as.vector(tempPAlist[["LeapR"]]$Pathway[tempPAlist[["LeapR"]]$Method == "Phosphoproteomics"]))) #NO COMBINED RESULTS YET
visList[["PaintOmics"]] <-
unique(str_to_title(trimws(as.vector(
tempPAlist[["PaintOmics"]]$Pathway
)))) #ALREADY FILTERED TO COMBINED PVALS IN PREVIOUS STEP
visList[["BONITA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["BONITA"]]$Pathway[tempPAlist[["BONITA"]]$Method == "Combined"]))))
visList[["mBONITA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["mBONITA"]]$Pathway[tempPAlist[["mBONITA"]]$Algorithm == "mBONITA"]))))
visList[["ActivePathways"]] <-
unique(str_to_title(trimws(as.vector(
tempPAlist[["ActivePathways"]]$Pathway
))))
visList[["multiGSEA"]] <- unique(str_to_title(trimws(as.vector(
tempPAlist[["multiGSEA"]]$Pathway
))))
visList <- lapply(visList, function(x){if(length(x) > 0){return(x)}else{return(NA)}})
visList <- visList[!is.na(visList)]
#print(visList)
return(visList)
}
require(UpSetR)
require(ggplot2)
# "1% O2, CyA- vs 19% O2, CyA-" "1% O2, CyA+ vs 1% O2, CyA-"  "19% O2, CyA- vs 1% O2, CyA+"
visList <- makeVisList(PAlist, "19% O2, CyA- vs 1% O2, CyA+")
png(filename = "upset_X19O2NoCyA - X1O2PlusCyA.png", width = 4.5, height = 3.5, pointsize = 16, res = 1200, units = 'in')
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 4, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(1.5,1.5,1.5,1.5,1.5,1.5), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
svg(filename = "upset_X19O2NoCyA - X1O2PlusCyA.svg", width = 4.5, height = 3.5, pointsize = 16)
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 4, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(1.5,1.5,1.5,1.5,1.5,1.5), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
upset1 = upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.7,0.3), empty.intersections = NULL, point.size = 4, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(1.5,1.5,1.5,1.5,1.5,1.5), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
# "1% O2, CyA- vs 19% O2, CyA-" "1% O2, CyA+ vs 1% O2, CyA-"  "19% O2, CyA- vs 1% O2, CyA+"
visList <- makeVisList(PAlist, "1% O2, CyA- vs 19% O2, CyA-")
png(filename = "upset_X19O2NoCyA - X1O2NoCyA.png", width = 4.5, height = 3.5, pointsize = 16, res = 1200, units = 'in')
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 4, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(1.5,1.5,1.5,1.5,1.5,1.5), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
svg(filename = "upset_X19O2NoCyA - X1O2NoCyA.svg", width = 4.5, height = 3.5, pointsize = 16)
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 4, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(1.5,1.5,1.5,1.5,1.5,1.5), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
upset2 = upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.7,0.3), empty.intersections = NULL, point.size = 4, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(1.5,1.5,1.5,1.5,1.5,1.5), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
# "1% O2, CyA- vs 19% O2, CyA-" "1% O2, CyA+ vs 1% O2, CyA-"  "19% O2, CyA- vs 1% O2, CyA+"
visList <- makeVisList(PAlist, "1% O2, CyA+ vs 1% O2, CyA-")
png(filename = "upset_X1O2PlusCyA - X1O2NoCyA.png", width = 4.5, height = 3.5, pointsize = 16, res = 1200, units = 'in')
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 4, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(1.5,1.5,1.5,1.5,1.5,1.5), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
svg(filename = "upset_X1O2PlusCyA - X1O2NoCyA.svg", width = 4.5, height = 3.5, pointsize = 16,)
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 4, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(1.5,1.5,1.5,1.5,1.5,1.5), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
upset3 = upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.7,0.3), empty.intersections = NULL, point.size = 4, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(1.5,1.5,1.5,1.5,1.5,1.5), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
pathways <- as.vector(read.table("PATHWAYS IN HIF1A NETWORK KEGG IDS.txt", header=FALSE, fill=TRUE)[,1])
print(pathways)
gmt <- read.table('kegg_networks_edited.gmt', header=FALSE, fill=TRUE, sep = "\t")[,1:2]
colnames(gmt) <- c('Pathway', 'KEGGID')
gmt <- na.omit(gmt[gmt$KEGGID %in% pathways, c("KEGGID", "Pathway")])
rownames(gmt) <- gmt$KEGGID
print(gmt)
PAlist2 <- lapply(PAlist, function(x){return(x[x$Method %in% c("Concatenated", "Combined", "mBONITA"), intersect(colnames(x), c('Contrast', 'Pathway',"Method", 'negativelog10FDR'))])}) #lapply(PAlist, function(x){return(x[x$Pathway %in% gmt$Pathway & x$Method %in% c("Concatenated", "Combined"), intersect(colnames(x), c('Contrast', 'Pathway',"Method", 'negativelog10FDR'))])})
PAlist2$Pathway <- unlist(lapply(PAlist2$Pathway, function(x){if(x %in% gmt$Pathway){return(paste0(x, "**"))}}))
PAlist2 <- Filter(function(x) dim(x)[1] > 0, PAlist2)
for (i in names(PAlist2)){
PAlist2[[i]]$Algorithm <- i
print(i)
print(colnames(PAlist2[[i]]))
print("###")
}
PAlist2 <- do.call(rbind,PAlist2)
rownames(PAlist2) <- 1:nrow(PAlist2)
PAlist2$Method <- 'Combined'
PAlist2
PAlist2 <- reshape2::acast(PAlist2, Pathway ~ Algorithm ~ Contrast, value.var = 'negativelog10FDR')
PAlist2[is.na(PAlist2)] <- 0
PAlist2 <- reshape2::melt(PAlist2)
colnames(PAlist2) <- c("Pathway", "Algorithm", "Contrast", "negativelog10FDR")
PAlist2
require(ggsci)
require(ggpubr)
PAlist2$Significant <- as.factor(unlist(lapply(PAlist2$negativelog10FDR, function(x){if(x<1.303){return(FALSE)}else{return(TRUE)}})))
#filter out pathways that aren't significant in any method/contrast combination
#aggregate(Significant ~ Pathway, data = PAlist2, FUN = sum)
p1 <- ggplot(PAlist2, aes(Algorithm, Pathway, fill=Significant)) + geom_tile(color = 'black', size = 0.3) + facet_wrap(~Contrast) + theme_pubr() + rotate_x_text(90) + scale_fill_brewer()
#ggpar(p1, palette = "npg")
#png(filename = "heatmap_HIF1pathways.png", width = 10, height = 4, pointsize = 14, res = 600, units = 'in')
png(filename = "heatmap_allKEGGpathways.png", width = 20, height = 14, pointsize = 14, res = 600, units = 'in')
p1
dev.off()
print(p1)
svg(filename = "heatmap_allKEGGpathways.svg", width = 10, height = 14, pointsize = 14)
p1
dev.off()
print(p1)
PAlist2$Pathway <- gsub("\\*\\*", "", PAlist2$Pathway)
PAlist2 <- na.omit(PAlist2[PAlist2$Pathway %in% gmt$Pathway,])
p1 <- ggplot(PAlist2, aes(Algorithm, Pathway, fill=Significant)) + geom_tile(color = 'black', size = 0.3) + facet_wrap(~Contrast) + theme_pubr() + rotate_x_text(90) + scale_fill_brewer()
#ggpar(p1, palette = "npg")
#png(filename = "heatmap_HIF1pathways.png", width = 10, height = 4, pointsize = 14, res = 600, units = 'in')
png(filename = "heatmap_HIF1_pathways.png", width = 10, height = 10, pointsize = 14, res = 600, units = 'in')
p1
dev.off()
print(p1)
svg(filename = "heatmap_HIF1_pathways.svg", width = 10, height = 10, pointsize = 14)
p1
dev.off()
print(p1)
hif1 = p1
PAlist2 <- as.data.frame(apply(PAlist2, 2, as.vector))
signif_in_most_methods <- unique(PAlist2$Pathway[PAlist2$Significant == TRUE & PAlist2$Algorithm %in% c("ActivePathways", "CAMERA", "mBONITA", "PaintOmics", "multiGSEA")])
PAlist2$Pathway <- gsub("\\*\\*", "", PAlist2$Pathway)
PAlist2 <- na.omit(PAlist2[PAlist2$Pathway %in% signif_in_most_methods,])
p1 <- ggplot(PAlist2, aes(Algorithm, Pathway, fill=Significant)) + geom_tile(color = 'black', size = 0.3) + facet_wrap(~Contrast) + theme_pubr() + rotate_x_text(90) + scale_fill_brewer()
#ggpar(p1, palette = "npg")
#png(filename = "heatmap_HIF1pathways.png", width = 10, height = 4, pointsize = 14, res = 600, units = 'in')
png(filename = "heatmap_signif_in_most_methods.png", width = 10, height = 10, pointsize = 14, res = 600, units = 'in')
p1
dev.off()
print(p1)
svg(filename = "heatmap_signif_in_most_methods.svg", width = 10, height = 10, pointsize = 14)
p1
dev.off()
print(p1)
require(ggplotify)
upset1 = as.grob(upset1)
upset2 = as.grob(upset2)
upset3 = as.grob(upset3)
require(gridExtra)
svg('Figure5_autoArranged.svg', width = 10, height = 10)
ggarrange(ggarrange(upset2,upset3,upset1,labels = c("A", "B", "C"), nrow=1, ncol = 3), hif1, labels = c("", "D"), nrow = 2, heights = c(1,1))
dev.off()
pdf('Figure5_autoArranged.pdf', width = 10, height = 10)
ggarrange(ggarrange(upset2,upset3,upset1,labels = c("A", "B", "C"), nrow=1, ncol = 3), hif1, labels = c("", "D"), nrow = 2, heights = c(1,1))
dev.off()
#p5 = arrangeGrob(upset2,upset3,upset1,hif1, layout_matrix = matrix(data = c(1,2,3,1,2,3,4,4,4,4,4,4,4,4,4), ncol=3, nrow=5, byrow=TRUE)) #note order
#ggsave('temp2.svg', p5, height = 10, width = 10, units="in")
