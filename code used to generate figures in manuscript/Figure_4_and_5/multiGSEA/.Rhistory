PAlist2 <- na.omit(PAlist2[PAlist2$Pathway %in% gmt$Pathway,])
p1 <- ggplot(PAlist2, aes(Algorithm, Pathway, fill=Significant)) + geom_tile(color = 'black', size = 0.3) + facet_wrap(~Contrast) + theme_pubr() + rotate_x_text(90) + scale_fill_brewer()
#ggpar(p1, palette = "npg")
#png(filename = "heatmap_HIF1pathways.png", width = 10, height = 4, pointsize = 14, res = 600, units = 'in')
png(filename = "heatmap_HIF1_pathways.png", width = 10, height = 10, pointsize = 14, res = 600, units = 'in')
p1
dev.off()
print(p1)
svg(filename = "heatmap_HIF1_pathways.svg", width = 10, height = 10, pointsize = 14)
p1
dev.off()
print(p1)
PAlist2 <- as.data.frame(apply(PAlist2, 2, as.vector))
signif_in_most_methods <- unique(PAlist2$Pathway[PAlist2$Significant == TRUE & PAlist2$Algorithm %in% c("ActivePathways", "CAMERA", "mBONITA", "PaintOmics", "multiGSEA")])
PAlist2$Pathway <- gsub("\\*\\*", "", PAlist2$Pathway)
PAlist2 <- na.omit(PAlist2[PAlist2$Pathway %in% signif_in_most_methods,])
p1 <- ggplot(PAlist2, aes(Algorithm, Pathway, fill=Significant)) + geom_tile(color = 'black', size = 0.3) + facet_wrap(~Contrast) + theme_pubr() + rotate_x_text(90) + scale_fill_brewer()
#ggpar(p1, palette = "npg")
#png(filename = "heatmap_HIF1pathways.png", width = 10, height = 4, pointsize = 14, res = 600, units = 'in')
png(filename = "heatmap_signif_in_most_methods.png", width = 10, height = 10, pointsize = 14, res = 600, units = 'in')
p1
dev.off()
print(p1)
svg(filename = "heatmap_signif_in_most_methods.svg", width = 10, height = 10, pointsize = 14)
p1
dev.off()
print(p1)
signif_in_most_methods
PAlist2
PAlist2$Algorithm
threshold <- 0.05
cwd <- getwd()
methods <- c("CAMERA", "LeapR", "PaintOmics", "ActivePathways", "BONITA", "mBONITA", "multiGSEA")
PAlist <- vector(mode = "list", length = length(methods))
names(PAlist) <- methods
PAlist[["CAMERA"]] <- read.csv(paste0(cwd, "/reactomeGSA-camera/camera_combinedPvalues.csv"), row.names = 1)
temp <- PAlist[["CAMERA"]]$FDR < threshold #PValue < 0.01
PAlist[["CAMERA"]] <- na.omit(PAlist[["CAMERA"]][temp,])
PAlist[["LeapR"]] <- read.csv(paste0(cwd, "/leapR/leapR_allResults.csv"))
temp <- PAlist[["LeapR"]]$BH_pvalue < threshold
PAlist[["LeapR"]] <- na.omit(PAlist[["LeapR"]][temp,])
PAlist[["LeapR"]]$Pathway <- trimws(gsub("KEGG|_|\\d+$", " ", PAlist[["LeapR"]]$Pathway))
PAlist[["PaintOmics"]]<- as.data.frame(read.csv(paste0(cwd, "/paintomics/paintomics_allResults.csv"), row.names = 1))
colnames(PAlist[["PaintOmics"]])[1] <- "Pathway"
temp <- PAlist[["PaintOmics"]]$Combined.pValue.Fisher..FDR.BH < threshold
PAlist[["PaintOmics"]] <- PAlist[["PaintOmics"]][temp,]
PAlist[["PaintOmics"]]$Method <- "Combined"
PAlist[["PaintOmics"]]$negativelog10FDR <- (-1)*log10(PAlist[["PaintOmics"]]$Combined.pValue.Fisher..FDR.BH.)
PAlist[["ActivePathways"]]<- read.csv(paste0(cwd, "/ActivePathways/activePathways_allResults.csv"), row.names = NULL)
temp <- PAlist[["ActivePathways"]]$adjusted.p.val < threshold
PAlist[["ActivePathways"]] <- PAlist[["ActivePathways"]][temp,]
PAlist[["BONITA"]]<- read.csv(paste0(cwd, "/mBonita_pvalues/Bonita_allResults.csv"), row.names = 1)
temp <- PAlist[["BONITA"]]$FDR < threshold
PAlist[["BONITA"]] <- na.omit(PAlist[["BONITA"]][temp,])
PAlist[['BONITA']] <- na.omit(PAlist[["BONITA"]][PAlist[["BONITA"]]$Method %in% c('Combined'),])
#levels(PAlist$BONITA$Contrast) <- c("X19O2NoCyA - X1O2PlusCyA", "X19O2NoCyA - X1O2NoCyA", "X1O2PlusCyA - X1O2NoCyA" )
PAlist[["mBONITA"]]<- read.csv(paste0(cwd, "/mBonita_pvalues/mBonita_pvalues.csv"), row.names = 1)
temp <- PAlist[["mBONITA"]]$negativelog10FDR > 1.303
PAlist[['mBONITA']]$Algorithm <- 'mBONITA'
PAlist[['mBONITA']]$Method <- 'Concatenated'
PAlist[["mBONITA"]] <- na.omit(PAlist[["mBONITA"]][temp,])
PAlist[["mBONITA"]]$Pathway.Code <- PAlist[["mBONITA"]]$Pathway
PAlist[["mBONITA"]]$Pathway <- PAlist[["mBONITA"]]$Pathway.Name
PAlist[["multiGSEA"]]<- read.csv(paste0(cwd, "/multiGSEA/multiGSEA_allResults.csv"), row.names = 1)
PAlist[["multiGSEA"]]<- na.omit(PAlist[["multiGSEA"]][PAlist[["multiGSEA"]]$combined_padj < threshold,])
PAlist[["multiGSEA"]]$Method <- "Combined"
for (n in names(PAlist)){
print(n)
PAlist[[n]]$Contrast <- gsub('X1O2NoCyA - X19O2NoCyA', '1% O2, CyA- vs 19% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub('X1O2PlusCyA - X1O2NoCyA', '1% O2, CyA+ vs 1% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub('X19O2NoCyA - X1O2PlusCyA', '19% O2, CyA- vs 1% O2, CyA+', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X19O2NoCyA - X1O2NoCyA", '1% O2, CyA- vs 19% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X1O2NoCyA - X1O2PlusCyA", '1% O2, CyA+ vs 1% O2, CyA-', PAlist[[n]]$Contrast)
print(unique(PAlist[[n]]$Contrast))
}
#PAlist[[""]]<- read.csv(paste0(cwd, ""))
print(lapply(PAlist, dim))
require(stringr)
makeVisList <- function(tempPAlist, contrast) {
visList <- tempPAlist
tempPAlist <-
lapply(tempPAlist, function(x) {
return(x[x$Contrast == contrast, ])
})
visList[["CAMERA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["CAMERA"]]$Pathway[tempPAlist[["CAMERA"]]$Method == "Combined"]))))
visList[["LeapR"]] <-
unique(str_to_title(as.vector(tempPAlist[["LeapR"]]$Pathway[tempPAlist[["LeapR"]]$Method == "Phosphoproteomics"]))) #NO COMBINED RESULTS YET
visList[["PaintOmics"]] <-
unique(str_to_title(trimws(as.vector(
tempPAlist[["PaintOmics"]]$Pathway
)))) #ALREADY FILTERED TO COMBINED PVALS IN PREVIOUS STEP
visList[["BONITA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["BONITA"]]$Pathway[tempPAlist[["BONITA"]]$Method == "Combined"]))))
visList[["mBONITA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["mBONITA"]]$Pathway[tempPAlist[["mBONITA"]]$Algorithm == "mBONITA"]))))
visList[["ActivePathways"]] <-
unique(str_to_title(trimws(as.vector(
tempPAlist[["ActivePathways"]]$Pathway
))))
visList[["multiGSEA"]] <- unique(str_to_title(trimws(as.vector(
tempPAlist[["multiGSEA"]]$Pathway
))))
visList <- lapply(visList, function(x){if(length(x) > 0){return(x)}else{return(NA)}})
visList <- visList[!is.na(visList)]
#print(visList)
return(visList)
}
require(UpSetR)
require(ggplot2)
# "1% O2, CyA- vs 19% O2, CyA-" "1% O2, CyA+ vs 1% O2, CyA-"  "19% O2, CyA- vs 1% O2, CyA+"
visList <- makeVisList(PAlist, "19% O2, CyA- vs 1% O2, CyA+")
png(filename = "upset_X19O2NoCyA - X1O2PlusCyA.png", width = 4, height = 8, pointsize = 14, res = 600, units = 'in')
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 5, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(2,2, 2, 2, 2, 2), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
# "1% O2, CyA- vs 19% O2, CyA-" "1% O2, CyA+ vs 1% O2, CyA-"  "19% O2, CyA- vs 1% O2, CyA+"
visList <- makeVisList(PAlist, "1% O2, CyA- vs 19% O2, CyA-")
png(filename = "upset_X19O2NoCyA - X1O2NoCyA.png", width = 4, height = 8, pointsize = 14, res = 600, units = 'in')
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 5, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(2,2, 2, 2, 2, 2), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
# "1% O2, CyA- vs 19% O2, CyA-" "1% O2, CyA+ vs 1% O2, CyA-"  "19% O2, CyA- vs 1% O2, CyA+"
visList <- makeVisList(PAlist, "1% O2, CyA+ vs 1% O2, CyA-")
png(filename = "upset_X1O2PlusCyA - X1O2NoCyA.png", width = 4, height = 8, pointsize = 14, res = 600, units = 'in')
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 5, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(2,2, 2, 2, 2, 2), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
pathways <- as.vector(read.table("PATHWAYS IN HIF1A NETWORK KEGG IDS.txt", header=FALSE, fill=TRUE)[,1])
print(pathways)
gmt <- read.table('kegg_networks_edited.gmt', header=FALSE, fill=TRUE, sep = "\t")[,1:2]
colnames(gmt) <- c('Pathway', 'KEGGID')
gmt <- na.omit(gmt[gmt$KEGGID %in% pathways, c("KEGGID", "Pathway")])
rownames(gmt) <- gmt$KEGGID
print(gmt)
PAlist2 <- lapply(PAlist, function(x){return(x[x$Method %in% c("Concatenated", "Combined", "mBONITA"), intersect(colnames(x), c('Contrast', 'Pathway',"Method", 'negativelog10FDR'))])}) #lapply(PAlist, function(x){return(x[x$Pathway %in% gmt$Pathway & x$Method %in% c("Concatenated", "Combined"), intersect(colnames(x), c('Contrast', 'Pathway',"Method", 'negativelog10FDR'))])})
PAlist2$Pathway <- unlist(lapply(PAlist2$Pathway, function(x){if(x %in% gmt$Pathway){return(paste0(x, "**"))}}))
PAlist2 <- Filter(function(x) dim(x)[1] > 0, PAlist2)
for (i in names(PAlist2)){
PAlist2[[i]]$Algorithm <- i
}
PAlist2 <- do.call(rbind,PAlist2)
rownames(PAlist2) <- 1:nrow(PAlist2)
PAlist2$Method <- 'Combined'
PAlist2
PAlist2 <- reshape2::acast(PAlist2, Pathway ~ Algorithm ~ Contrast, value.var = 'negativelog10FDR')
PAlist2[is.na(PAlist2)] <- 0
PAlist2 <- reshape2::melt(PAlist2)
colnames(PAlist2) <- c("Pathway", "Algorithm", "Contrast", "negativelog10FDR")
PAlist2
require(ggsci)
require(ggpubr)
PAlist2$Significant <- as.factor(unlist(lapply(PAlist2$negativelog10FDR, function(x){if(x<1.303){return(FALSE)}else{return(TRUE)}})))
#filter out pathways that aren't significant in any method/contrast combination
#aggregate(Significant ~ Pathway, data = PAlist2, FUN = sum)
p1 <- ggplot(PAlist2, aes(Algorithm, Pathway, fill=Significant)) + geom_tile(color = 'black', size = 0.3) + facet_wrap(~Contrast) + theme_pubr() + rotate_x_text(90) + scale_fill_brewer()
#ggpar(p1, palette = "npg")
#png(filename = "heatmap_HIF1pathways.png", width = 10, height = 4, pointsize = 14, res = 600, units = 'in')
png(filename = "heatmap_allKEGGpathways.png", width = 20, height = 14, pointsize = 14, res = 600, units = 'in')
p1
dev.off()
print(p1)
svg(filename = "heatmap_allKEGGpathways.svg", width = 10, height = 14, pointsize = 14)
p1
dev.off()
print(p1)
PAlist2$Pathway <- gsub("\\*\\*", "", PAlist2$Pathway)
PAlist2 <- na.omit(PAlist2[PAlist2$Pathway %in% gmt$Pathway,])
p1 <- ggplot(PAlist2, aes(Algorithm, Pathway, fill=Significant)) + geom_tile(color = 'black', size = 0.3) + facet_wrap(~Contrast) + theme_pubr() + rotate_x_text(90) + scale_fill_brewer()
#ggpar(p1, palette = "npg")
#png(filename = "heatmap_HIF1pathways.png", width = 10, height = 4, pointsize = 14, res = 600, units = 'in')
png(filename = "heatmap_HIF1_pathways.png", width = 10, height = 10, pointsize = 14, res = 600, units = 'in')
p1
dev.off()
print(p1)
svg(filename = "heatmap_HIF1_pathways.svg", width = 10, height = 10, pointsize = 14)
p1
dev.off()
print(p1)
PAlist2 <- as.data.frame(apply(PAlist2, 2, as.vector))
signif_in_most_methods <- unique(PAlist2$Pathway[PAlist2$Significant == TRUE & PAlist2$Algorithm %in% c("ActivePathways", "CAMERA", "mBONITA", "PaintOmics", "multiGSEA")])
PAlist2$Pathway <- gsub("\\*\\*", "", PAlist2$Pathway)
PAlist2 <- na.omit(PAlist2[PAlist2$Pathway %in% signif_in_most_methods,])
p1 <- ggplot(PAlist2, aes(Algorithm, Pathway, fill=Significant)) + geom_tile(color = 'black', size = 0.3) + facet_wrap(~Contrast) + theme_pubr() + rotate_x_text(90) + scale_fill_brewer()
#ggpar(p1, palette = "npg")
#png(filename = "heatmap_HIF1pathways.png", width = 10, height = 4, pointsize = 14, res = 600, units = 'in')
png(filename = "heatmap_signif_in_most_methods.png", width = 10, height = 10, pointsize = 14, res = 600, units = 'in')
p1
dev.off()
print(p1)
svg(filename = "heatmap_signif_in_most_methods.svg", width = 10, height = 10, pointsize = 14)
p1
dev.off()
print(p1)
## ----bioconductor, eval=FALSE-------------------------------------------------
#
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# # The following initializes usage of Bioc devel
BiocManager::install(version='devel')
BiocManager::install("multiGSEA")
setwd("C:\\Users\\mpalshikar\\Documents\\moBONITA\\data\\multiGSEA")
#setwd("C:\\Users\\mpalshikar\\Documents\\moBONITA\\data\\multiGSEA")
setwd("C:\\Users\\Mukta/ Palshikar\\Documents\\GitHub\\moBONITA\\data\\multiGSEA")
#setwd("C:\\Users\\mpalshikar\\Documents\\moBONITA\\data\\multiGSEA")
setwd("C:\\Users\\Mukta\ Palshikar\\Documents\\GitHub\\moBONITA\\data\\multiGSEA")
## ----load_mapping_library, results='hide', warning=FALSE, message=FALSE-------
require( "org.Hs.eg.db")
## ----load_multiGSEA_package, results='hide', message=FALSE, warning=FALSE-----
require( multiGSEA)
require( magrittr)
require(readxl)
pathToReactome <- "C:\\Users\\Mukta Palshikar\\Documents\\GitHub\\moBONITA\\data\\paintomics\\"
runMultiGSEA <- function(de_mrna, de_prot, de_phospho){
de_mrna <- de_mrna[,c("Identifier", "logFC", "P.Value", "adj.P.Val")]
colnames(de_mrna) <- c('Symbol', 'logFC', 'pValue', 'adj.pValue')
de_prot <- de_prot[,c("Identifier", "logFC", "P.Value", "adj.P.Val")]
colnames(de_prot) <- c('Symbol', 'logFC', 'pValue', 'adj.pValue')
de_phospho <- de_phospho[,c("Identifier", "logFC", "P.Value", "adj.P.Val")]
colnames(de_phospho) <- c('Symbol', 'logFC', 'pValue', 'adj.pValue')
## ----rank_features, results='hide'--------------------------------------------
# create data structure
omics_data <- initOmicsDataStructure( layer = c("transcriptome",
"proteome",
"metabolome"))
## add transcriptome layer
omics_data$transcriptome <- rankFeatures( de_mrna$logFC,
de_mrna$pValue)
names( omics_data$transcriptome) <- de_mrna$Symbol
## add proteome layer
omics_data$proteome <- rankFeatures(de_prot$logFC, de_prot$pValue)
names( omics_data$proteome) <- de_prot$Symbol
## add phosphoproteome layer
omics_data$metabolome <- rankFeatures(de_phospho$logFC, de_phospho$pValue)
names( omics_data$metabolome) <- de_phospho$Symbol
## ----omics_short--------------------------------------------------------------
omics_short <- lapply( names( omics_data), function( name){
head( omics_data[[name]])
})
names( omics_short) <- names( omics_data)
omics_short
## ----calculate_enrichment, results='hide', message=FALSE, warning=FALSE-------
databases <- c( "kegg")#, "reactome")
layers <- names( omics_data)
pathways <- getMultiOmicsFeatures( dbs = databases, layer = c('transcriptome', 'proteome'),
returnTranscriptome = "SYMBOL",
returnProteome = "SYMBOL",
#returnMetabolome = "HMDB",
useLocal = FALSE)
pathways$metabolome <- pathways$proteome
## ----pathways_short-----------------------------------------------------------
pathways_short <- lapply( names( pathways), function( name){
head( pathways[[name]], 2)
})
names( pathways_short) <- names( pathways)
pathways_short
## ----run_enrichment, results='hide', message=FALSE, warning=FALSE-------------
# use the multiGSEA function to calculate the enrichment scores
# for all omics layer at once.
enrichment_scores <- multiGSEA( pathways, omics_data)
## ----combine_pvalues----------------------------------------------------------
df <- extractPvalues( enrichmentScores = enrichment_scores,
pathwayNames = names( pathways[[1]]))
df$combined_pval <- combinePvalues( df)
df$combined_padj <- p.adjust( df$combined_pval, method = "BH")
df <- cbind( data.frame( pathway = names( pathways[[1]])), df)
## view results
#head(df)
#na.omit(df[df$combined_padj < 0.05,])
#hist(df$combined_padj)
return(df)
}
de_mrna <- read.csv(paste(pathToReactome,"\\contrast1\\Transcriptomics_1O2NoCyclo_vs_1O2PlusCyclo.csv", sep = ""))
de_prot <- read.csv(paste(pathToReactome,"\\contrast1\\Proteomics_1O2NoCyclo_vs_1O2PlusCyclo.csv", sep = ""))
de_phospho <- read.csv(paste(pathToReactome,"\\contrast1\\Phosphoproteomics_1O2NoCyclo_vs_1O2PlusCyclo.csv", sep = ""))
commonGenes <- union(de_mrna$Identifier, union(de_prot$Identifier, de_phospho$Identifier))
length(commonGenes)
contrast1 <- runMultiGSEA(de_mrna, de_prot, de_phospho)
contrast1$Contrast <- "X1O2NoCyA - X1O2PlusCyA"
head(contrast1)
#Contrast 2: 1O2NoCyA vs 19O2NoCyA  1O2NoCyclo_vs_19O2NoCyclo
de_mrna <- read.csv(paste(pathToReactome,"\\contrast2\\Transcriptomics_1O2NoCyclo_vs_19O2NoCyclo.csv", sep = ""))
de_prot <- read.csv(paste(pathToReactome,"\\contrast2\\Proteomics_1O2NoCyclo_vs_19O2NoCyclo.csv", sep = ""))
de_phospho <- read.csv(paste(pathToReactome,"\\contrast2\\Phosphoproteomics_1O2NoCyclo_vs_19O2NoCyclo.csv", sep = ""))
commonGenes <- union(de_mrna$Identifier, union(de_prot$Identifier, de_phospho$Identifier))
length(commonGenes)
contrast2 <- runMultiGSEA(de_mrna, de_prot, de_phospho)
contrast2$Contrast <- "X1O2NoCyA vs X19O2NoCyA"
contrast2
# Contrast 3: 1O2PlusCyA vs 19O2NoCyA
de_mrna <- read.csv(paste(pathToReactome,"\\contrast3\\Transcriptomics_1O2PlusCyclo_vs_19O2NoCyclo.csv", sep = ""))
de_prot <- read.csv(paste(pathToReactome,"\\contrast3\\Proteomics_1O2PlusCyclo_vs_19O2NoCyclo.csv", sep = ""))
de_phospho <- read.csv(paste(pathToReactome,"\\contrast3\\Phosphoproteomics_1O2PlusCyclo_vs_19O2NoCyclo.csv", sep = ""))
commonGenes <- union(de_mrna$Identifier, union(de_prot$Identifier, de_phospho$Identifier))
length(commonGenes)
contrast3 <- runMultiGSEA(de_mrna, de_prot, de_phospho)
contrast3$Contrast <- "X19O2NoCyA - X1O2PlusCyA"
allResults <- rbind(contrast1, contrast2, contrast3)
allResults$negativelog10FDR <- (-1)*log10(allResults$combined_padj)
allResults$Pathway <- stringr::str_to_title(trimws(gsub("\\(KEGG\\)", "", allResults$pathway)))
allResults$Algorithm <- "multiGSEA"
colnames(allResults) <- gsub("metabolome", "phosphoproteome", colnames(allResults))
write.csv(allResults, 'multiGSEA_allResults.csv')
print(head(allResults))
require(ggplot2)
require(ggpubr)
allResults <- na.omit(allResults[allResults$combined_padj< 0.05,])
ggplot(allResults) + geom_point(aes(x=negativelog10FDR, y=Pathway, color=Contrast)) + facet_wrap(facets = 'Contrast') + theme_pubr() + xlab("-log10(BH-corrected p-value)") + xlim(0, max(allResults$negativelog10FDR)+0.5)
ggsave(filename = "multiGSEA_allResults.svg", width = 9, height = 3, units = 'in')
ggsave(filename = "multiGSEA_allResults.png", width = 9, height = 3, units = 'in', dpi=600)
threshold <- 0.05
cwd <- getwd()
methods <- c("CAMERA", "LeapR", "PaintOmics", "ActivePathways", "BONITA", "mBONITA", "multiGSEA")
PAlist <- vector(mode = "list", length = length(methods))
names(PAlist) <- methods
PAlist[["CAMERA"]] <- read.csv(paste0(cwd, "/reactomeGSA-camera/camera_combinedPvalues.csv"), row.names = 1)
temp <- PAlist[["CAMERA"]]$FDR < threshold #PValue < 0.01
PAlist[["CAMERA"]] <- na.omit(PAlist[["CAMERA"]][temp,])
PAlist[["LeapR"]] <- read.csv(paste0(cwd, "/leapR/leapR_allResults.csv"))
temp <- PAlist[["LeapR"]]$BH_pvalue < threshold
PAlist[["LeapR"]] <- na.omit(PAlist[["LeapR"]][temp,])
PAlist[["LeapR"]]$Pathway <- trimws(gsub("KEGG|_|\\d+$", " ", PAlist[["LeapR"]]$Pathway))
PAlist[["PaintOmics"]]<- as.data.frame(read.csv(paste0(cwd, "/paintomics/paintomics_allResults.csv"), row.names = 1))
colnames(PAlist[["PaintOmics"]])[1] <- "Pathway"
temp <- PAlist[["PaintOmics"]]$Combined_FDR < threshold
PAlist[["PaintOmics"]] <- PAlist[["PaintOmics"]][temp,]
PAlist[["PaintOmics"]]$Method <- "Combined"
PAlist[["PaintOmics"]]$negativelog10FDR <- (-1)*log10(PAlist[["PaintOmics"]]$Combined_FDR)
PAlist[["ActivePathways"]]<- read.csv(paste0(cwd, "/ActivePathways/activePathways_allResults.csv"), row.names = NULL)
temp <- PAlist[["ActivePathways"]]$adjusted.p.val < threshold
PAlist[["ActivePathways"]] <- PAlist[["ActivePathways"]][temp,]
PAlist[["BONITA"]]<- read.csv(paste0(cwd, "/mBonita_pvalues/Bonita_allResults.csv"), row.names = 1)
temp <- PAlist[["BONITA"]]$FDR < threshold
PAlist[["BONITA"]] <- na.omit(PAlist[["BONITA"]][temp,])
PAlist[['BONITA']] <- na.omit(PAlist[["BONITA"]][PAlist[["BONITA"]]$Method %in% c('Combined'),])
#levels(PAlist$BONITA$Contrast) <- c("X19O2NoCyA - X1O2PlusCyA", "X19O2NoCyA - X1O2NoCyA", "X1O2PlusCyA - X1O2NoCyA" )
PAlist[["mBONITA"]]<- read.csv(paste0(cwd, "/mBonita_pvalues/mBonita_pvalues.csv"), row.names = 1)
temp <- PAlist[["mBONITA"]]$negativelog10FDR > 1.303
PAlist[['mBONITA']]$Algorithm <- 'mBONITA'
PAlist[['mBONITA']]$Method <- 'Concatenated'
PAlist[["mBONITA"]] <- na.omit(PAlist[["mBONITA"]][temp,])
PAlist[["mBONITA"]]$Pathway.Code <- PAlist[["mBONITA"]]$Pathway
PAlist[["mBONITA"]]$Pathway <- PAlist[["mBONITA"]]$Pathway.Name
PAlist[["multiGSEA"]]<- read.csv(paste0(cwd, "/multiGSEA/multiGSEA_allResults.csv"), row.names = 1)
PAlist[["multiGSEA"]]<- na.omit(PAlist[["multiGSEA"]][PAlist[["multiGSEA"]]$combined_padj < threshold,])
PAlist[["multiGSEA"]]$Method <- "Combined"
for (n in names(PAlist)){
print(n)
PAlist[[n]]$Contrast <- gsub('X1O2NoCyA - X19O2NoCyA', '1% O2, CyA- vs 19% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub('X1O2PlusCyA - X1O2NoCyA', '1% O2, CyA+ vs 1% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub('X19O2NoCyA - X1O2PlusCyA', '19% O2, CyA- vs 1% O2, CyA+', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X19O2NoCyA - X1O2NoCyA", '1% O2, CyA- vs 19% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X1O2NoCyA - X1O2PlusCyA", '1% O2, CyA+ vs 1% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X1O2NoCyA vs X19O2NoCyA", '1% O2, CyA- vs 19% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X1O2PlusCyA - X19O2NoCyA", '19% O2, CyA- vs 1% O2, CyA+', PAlist[[n]]$Contrast)
print(unique(PAlist[[n]]$Contrast))
}
#PAlist[[""]]<- read.csv(paste0(cwd, ""))
print(lapply(PAlist, dim))
PAlist[['leapR']]
PAlist[["LeapR"]] <- read.csv(paste0(cwd, "/leapR/leapR_allResults.csv"))
temp <- PAlist[["LeapR"]]$BH_pvalue < threshold
PAlist[["LeapR"]]
threshold <- 0.05
cwd <- getwd()
methods <- c("CAMERA", "LeapR", "PaintOmics", "ActivePathways", "BONITA", "mBONITA", "multiGSEA")
PAlist <- vector(mode = "list", length = length(methods))
names(PAlist) <- methods
PAlist[["CAMERA"]] <- read.csv(paste0(cwd, "/reactomeGSA-camera/camera_combinedPvalues.csv"), row.names = 1)
temp <- PAlist[["CAMERA"]]$FDR < threshold #PValue < 0.01
PAlist[["CAMERA"]] <- na.omit(PAlist[["CAMERA"]][temp,])
PAlist[["LeapR"]] <- read.csv(paste0(cwd, "/leapR/leapR_allResults.csv"))
temp <- PAlist[["LeapR"]]$BH_pvalue < threshold
#PAlist[["LeapR"]] <- na.omit(PAlist[["LeapR"]][temp,])
PAlist[["LeapR"]]$Pathway <- trimws(gsub("KEGG|_|\\d+$", " ", PAlist[["LeapR"]]$Pathway))
PAlist[["PaintOmics"]]<- as.data.frame(read.csv(paste0(cwd, "/paintomics/paintomics_allResults.csv"), row.names = 1))
colnames(PAlist[["PaintOmics"]])[1] <- "Pathway"
temp <- PAlist[["PaintOmics"]]$Combined_FDR < threshold
PAlist[["PaintOmics"]] <- PAlist[["PaintOmics"]][temp,]
PAlist[["PaintOmics"]]$Method <- "Combined"
PAlist[["PaintOmics"]]$negativelog10FDR <- (-1)*log10(PAlist[["PaintOmics"]]$Combined_FDR)
PAlist[["ActivePathways"]]<- read.csv(paste0(cwd, "/ActivePathways/activePathways_allResults.csv"), row.names = NULL)
temp <- PAlist[["ActivePathways"]]$adjusted.p.val < threshold
PAlist[["ActivePathways"]] <- PAlist[["ActivePathways"]][temp,]
PAlist[["BONITA"]]<- read.csv(paste0(cwd, "/mBonita_pvalues/Bonita_allResults.csv"), row.names = 1)
temp <- PAlist[["BONITA"]]$FDR < threshold
PAlist[["BONITA"]] <- na.omit(PAlist[["BONITA"]][temp,])
PAlist[['BONITA']] <- na.omit(PAlist[["BONITA"]][PAlist[["BONITA"]]$Method %in% c('Combined'),])
#levels(PAlist$BONITA$Contrast) <- c("X19O2NoCyA - X1O2PlusCyA", "X19O2NoCyA - X1O2NoCyA", "X1O2PlusCyA - X1O2NoCyA" )
PAlist[["mBONITA"]]<- read.csv(paste0(cwd, "/mBonita_pvalues/mBonita_pvalues.csv"), row.names = 1)
temp <- PAlist[["mBONITA"]]$negativelog10FDR > 1.303
PAlist[['mBONITA']]$Algorithm <- 'mBONITA'
PAlist[['mBONITA']]$Method <- 'Concatenated'
PAlist[["mBONITA"]] <- na.omit(PAlist[["mBONITA"]][temp,])
PAlist[["mBONITA"]]$Pathway.Code <- PAlist[["mBONITA"]]$Pathway
PAlist[["mBONITA"]]$Pathway <- PAlist[["mBONITA"]]$Pathway.Name
PAlist[["multiGSEA"]]<- read.csv(paste0(cwd, "/multiGSEA/multiGSEA_allResults.csv"), row.names = 1)
PAlist[["multiGSEA"]]<- na.omit(PAlist[["multiGSEA"]][PAlist[["multiGSEA"]]$combined_padj < threshold,])
PAlist[["multiGSEA"]]$Method <- "Combined"
for (n in names(PAlist)){
print(n)
PAlist[[n]]$Contrast <- gsub('X1O2NoCyA - X19O2NoCyA', '1% O2, CyA- vs 19% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub('X1O2PlusCyA - X1O2NoCyA', '1% O2, CyA+ vs 1% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub('X19O2NoCyA - X1O2PlusCyA', '19% O2, CyA- vs 1% O2, CyA+', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X19O2NoCyA - X1O2NoCyA", '1% O2, CyA- vs 19% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X1O2NoCyA - X1O2PlusCyA", '1% O2, CyA+ vs 1% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X1O2NoCyA vs X19O2NoCyA", '1% O2, CyA- vs 19% O2, CyA-', PAlist[[n]]$Contrast)
PAlist[[n]]$Contrast <- gsub("X1O2PlusCyA - X19O2NoCyA", '19% O2, CyA- vs 1% O2, CyA+', PAlist[[n]]$Contrast)
print(unique(PAlist[[n]]$Contrast))
}
#PAlist[[""]]<- read.csv(paste0(cwd, ""))
print(lapply(PAlist, dim))
temp <- PAlist[['mBONITA']]
tempPath <- setdiff(temp$Pathway, Reduce(union, list(PAlist[["CAMERA"]]$Pathway, PAlist[["LeapR"]]$Pathway, PAlist[["PaintOmics"]]$Pathway, PAlist[["ActivePathways"]]$Pathway)))
unique_mb <- na.omit(temp[temp$Pathway %in% tempPath,])
unique_mb <- na.omit(unique_mb[unique_mb$negativelog10FDR > (-1)*log10(0.05),])
ggplot(unique_mb) + geom_point(aes(x=negativelog10FDR, y=Pathway, color=Contrast)) + facet_wrap(facets = 'Contrast', drop=TRUE) + theme_pubr() + theme(panel.grid.major = element_line("gray",0.5), panel.grid.minor = element_line("gray",0.25))
ggsave(filename = "mBonita_uniqueResults_allMethods.svg", width = 10, height = 24, units = 'in')
ggsave(filename = 'mBonita_uniqueResults_allMethods.png', width = 10, height = 24, units = 'in')
require(stringr)
makeVisList <- function(tempPAlist, contrast) {
visList <- tempPAlist
tempPAlist <-
lapply(tempPAlist, function(x) {
return(x[x$Contrast == contrast, ])
})
visList[["CAMERA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["CAMERA"]]$Pathway[tempPAlist[["CAMERA"]]$Method == "Combined"]))))
visList[["LeapR"]] <-
unique(str_to_title(as.vector(tempPAlist[["LeapR"]]$Pathway[tempPAlist[["LeapR"]]$Method == "Phosphoproteomics"]))) #NO COMBINED RESULTS YET
visList[["PaintOmics"]] <-
unique(str_to_title(trimws(as.vector(
tempPAlist[["PaintOmics"]]$Pathway
)))) #ALREADY FILTERED TO COMBINED PVALS IN PREVIOUS STEP
visList[["BONITA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["BONITA"]]$Pathway[tempPAlist[["BONITA"]]$Method == "Combined"]))))
visList[["mBONITA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["mBONITA"]]$Pathway[tempPAlist[["mBONITA"]]$Algorithm == "mBONITA"]))))
visList[["ActivePathways"]] <-
unique(str_to_title(trimws(as.vector(
tempPAlist[["ActivePathways"]]$Pathway
))))
visList[["multiGSEA"]] <- unique(str_to_title(trimws(as.vector(
tempPAlist[["multiGSEA"]]$Pathway
))))
visList <- lapply(visList, function(x){if(length(x) > 0){return(x)}else{return(NA)}})
visList <- visList[!is.na(visList)]
#print(visList)
return(visList)
}
require(stringr)
makeVisList <- function(tempPAlist, contrast) {
visList <- tempPAlist
tempPAlist <-
lapply(tempPAlist, function(x) {
return(x[x$Contrast == contrast, ])
})
visList[["CAMERA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["CAMERA"]]$Pathway[tempPAlist[["CAMERA"]]$Method == "Combined"]))))
visList[["LeapR"]] <-
unique(str_to_title(as.vector(tempPAlist[["LeapR"]]$Pathway[tempPAlist[["LeapR"]]$Method == "Phosphoproteomics"]))) #NO COMBINED RESULTS YET
visList[["PaintOmics"]] <-
unique(str_to_title(trimws(as.vector(
tempPAlist[["PaintOmics"]]$Pathway
)))) #ALREADY FILTERED TO COMBINED PVALS IN PREVIOUS STEP
visList[["BONITA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["BONITA"]]$Pathway[tempPAlist[["BONITA"]]$Method == "Combined"]))))
visList[["mBONITA"]] <-
unique(str_to_title(trimws(as.vector(tempPAlist[["mBONITA"]]$Pathway[tempPAlist[["mBONITA"]]$Algorithm == "mBONITA"]))))
visList[["ActivePathways"]] <-
unique(str_to_title(trimws(as.vector(
tempPAlist[["ActivePathways"]]$Pathway
))))
visList[["multiGSEA"]] <- unique(str_to_title(trimws(as.vector(
tempPAlist[["multiGSEA"]]$Pathway
))))
visList <- lapply(visList, function(x){if(length(x) > 0){return(x)}else{return(NA)}})
visList <- visList[!is.na(visList)]
#print(visList)
return(visList)
}
require(UpSetR)
require(ggplot2)
# "1% O2, CyA- vs 19% O2, CyA-" "1% O2, CyA+ vs 1% O2, CyA-"  "19% O2, CyA- vs 1% O2, CyA+"
visList <- makeVisList(PAlist, "19% O2, CyA- vs 1% O2, CyA+")
png(filename = "upset_X19O2NoCyA - X1O2PlusCyA.png", width = 4, height = 8, pointsize = 14, res = 600, units = 'in')
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 5, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(2,2, 2, 2, 2, 2), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
# "1% O2, CyA- vs 19% O2, CyA-" "1% O2, CyA+ vs 1% O2, CyA-"  "19% O2, CyA- vs 1% O2, CyA+"
visList <- makeVisList(PAlist, "1% O2, CyA- vs 19% O2, CyA-")
png(filename = "upset_X19O2NoCyA - X1O2NoCyA.png", width = 4, height = 8, pointsize = 14, res = 600, units = 'in')
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 5, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(2,2, 2, 2, 2, 2), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
# "1% O2, CyA- vs 19% O2, CyA-" "1% O2, CyA+ vs 1% O2, CyA-"  "19% O2, CyA- vs 1% O2, CyA+"
visList <- makeVisList(PAlist, "1% O2, CyA+ vs 1% O2, CyA-")
png(filename = "upset_X1O2PlusCyA - X1O2NoCyA.png", width = 4, height = 8, pointsize = 14, res = 600, units = 'in')
upset(fromList(visList), order.by = c("freq", "degree"), mb.ratio = c(0.55, 0.45), empty.intersections = NULL, point.size = 5, line.size = 1 , mainbar.y.label = "Intersections", sets.x.label = "Pathways", text.scale = c(2,2, 2, 2, 2, 2), number.angles = 0, main.bar.color = 'black', sets.bar.color = 'black', shade.color = 'white', matrix.color = 'black')
dev.off()
pathways <- as.vector(read.table("PATHWAYS IN HIF1A NETWORK KEGG IDS.txt", header=FALSE, fill=TRUE)[,1])
print(pathways)
gmt <- read.table('kegg_networks_edited.gmt', header=FALSE, fill=TRUE, sep = "\t")[,1:2]
colnames(gmt) <- c('Pathway', 'KEGGID')
gmt <- na.omit(gmt[gmt$KEGGID %in% pathways, c("KEGGID", "Pathway")])
rownames(gmt) <- gmt$KEGGID
print(gmt)
PAlist2 <- lapply(PAlist, function(x){return(x[x$Method %in% c("Concatenated", "Combined", "mBONITA"), intersect(colnames(x), c('Contrast', 'Pathway',"Method", 'negativelog10FDR'))])}) #lapply(PAlist, function(x){return(x[x$Pathway %in% gmt$Pathway & x$Method %in% c("Concatenated", "Combined"), intersect(colnames(x), c('Contrast', 'Pathway',"Method", 'negativelog10FDR'))])})
PAlist2$Pathway <- unlist(lapply(PAlist2$Pathway, function(x){if(x %in% gmt$Pathway){return(paste0(x, "**"))}}))
PAlist2 <- Filter(function(x) dim(x)[1] > 0, PAlist2)
for (i in names(PAlist2)){
PAlist2[[i]]$Algorithm <- i
}
PAlist2 <- do.call(rbind,PAlist2)
rownames(PAlist2) <- 1:nrow(PAlist2)
PAlist2$Method <- 'Combined'
PAlist2
